# specific path build
trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - docs/*
    - README.md

pr:
  branches:
    include:
    - main
  paths:
    exclude:
    - docs/*
    - docs/README.md

pool:
  vmImage: 'ubuntu-18.04'

variables:
  COMPOSER_CACHE_DIR: $(Pipeline.Workspace)/.composer

resources: 
    containers: 
    - container: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
      env:
        discovery.type: single-node
      ports:
      - 9200:9200
stages:
- stage: build
  variables:
    phpVersion: 7.4
  jobs:
  - job: Lint
    displayName: Lint
    steps:
    - template: templates/setup-php.yml
    - template: templates/magento-auth.yml
    - template: templates/composer-cache.yml
      parameters:
        key: '"$(phpVersion)"'
    - template: templates/composer-install.yml
    - script: composer run-script lint
      displayName: Lint
  - job: Unit_Test
    displayName: Unit Test
    strategy:
      matrix:
        php73:
          phpVersion: 7.3
        php74:
          phpVersion: 7.4
    steps:
    - template: templates/setup-php.yml
    - template: templates/magento-auth.yml
    - template: templates/composer-cache.yml
      parameters:
        key: '"$(phpVersion)"'
    - template: templates/composer-install.yml
    - script: composer run-script unit-test
      displayName: Unit Test
  - job: Integration_Test
    displayName: Integration Test
    variables: 
      magedir: "../magento2"
    services:
      elasticsearch: elasticsearch
    strategy:
      matrix:
        php73_magento2.3:
          phpVersion: 7.3
          magentoTag: ^2.3
          composerVersion: 1
        php74_magento2.4:
          phpVersion: 7.4
          magentoTag: ^2.4
          composerVersion: 2
    steps:
    - template: templates/setup-php.yml
    
    - script: bash ./ci/scripts/wait-for-elasticsearch.sh http://localhost:9200/_cat/health?h=status
      displayName: Wait for Elasticsearch to start...
    
    - template: templates/composer-version.yml
      parameters:
        composerVersion: $(composerVersion)

    - template: templates/composer-cache.yml
      parameters:
        key: '"$(phpVersion)" | "$(magentoTag)" | "$(composerVersion)" | "v2"'

    - template: templates/magento-auth.yml

    - script: composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=$(magentoTag) $(magedir) --no-install
      displayName: Create Magento $(magentoTag) Project 
    
    - script: composer config repositories.local path $(Build.SourcesDirectory) 
      workingDirectory: $(magedir)
      displayName: Add Github Repo for Testing
    
    - script: composer require graycore/magento2-stdlogging "@dev" --no-update && composer install
      workingDirectory: $(magedir)
      displayName: Require and attempt install

    - script: sudo systemctl start mysql.service && mysql -u root -proot < $(Build.SourcesDirectory)/ci/scripts/create-database.sql
      displayName: Setup MySQL

    - script: cp $(Build.SourcesDirectory)/ci/phpunit.xml $(magedir)/dev/tests/integration/phpunit.xml
      displayName: Copy PHPUnit.xml

    - script: cp ci/install-config-mysql-2.3.php ../magento2/dev/tests/integration/etc/install-config-mysql.php
      condition: and(succeeded(), contains(variables['magentoTag'], '2.3'))
      displayName: Setup Magento Test config.php (2.3)

    - script: cp ci/install-config-mysql-2.4.php ../magento2/dev/tests/integration/etc/install-config-mysql.php
      condition: and(succeeded(), contains(variables['magentoTag'], '2.4'))
      displayName: Setup Magento Test config.php (2.4)

    - script: ../../../vendor/bin/phpunit --testsuite "Graycore_StdLogging"
      workingDirectory: $(magedir)/dev/tests/integration
      displayName: Run Tests